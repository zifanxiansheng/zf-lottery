<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.zifanxiansheng.zf_lottery.infrastructure.dao.RuleTreeDAO">
  <resultMap id="BaseResultMap" type="top.zifanxiansheng.zf_lottery.infrastructure.po.RuleTree">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="tree_name" jdbcType="VARCHAR" property="treeName" />
    <result column="tree_desc" jdbcType="VARCHAR" property="treeDesc" />
    <result column="tree_root_node_id" jdbcType="BIGINT" property="treeRootNodeId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, tree_name, tree_desc, tree_root_node_id, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from rule_tree
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from rule_tree
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="top.zifanxiansheng.zf_lottery.infrastructure.po.RuleTree" useGeneratedKeys="true">
    insert into rule_tree (tree_name, tree_desc, tree_root_node_id, 
      create_time, update_time)
    values (#{treeName,jdbcType=VARCHAR}, #{treeDesc,jdbcType=VARCHAR}, #{treeRootNodeId,jdbcType=BIGINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="top.zifanxiansheng.zf_lottery.infrastructure.po.RuleTree" useGeneratedKeys="true">
    insert into rule_tree
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="treeName != null">
        tree_name,
      </if>
      <if test="treeDesc != null">
        tree_desc,
      </if>
      <if test="treeRootNodeId != null">
        tree_root_node_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="treeName != null">
        #{treeName,jdbcType=VARCHAR},
      </if>
      <if test="treeDesc != null">
        #{treeDesc,jdbcType=VARCHAR},
      </if>
      <if test="treeRootNodeId != null">
        #{treeRootNodeId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="top.zifanxiansheng.zf_lottery.infrastructure.po.RuleTree">
    update rule_tree
    <set>
      <if test="treeName != null">
        tree_name = #{treeName,jdbcType=VARCHAR},
      </if>
      <if test="treeDesc != null">
        tree_desc = #{treeDesc,jdbcType=VARCHAR},
      </if>
      <if test="treeRootNodeId != null">
        tree_root_node_id = #{treeRootNodeId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="top.zifanxiansheng.zf_lottery.infrastructure.po.RuleTree">
    update rule_tree
    set tree_name = #{treeName,jdbcType=VARCHAR},
      tree_desc = #{treeDesc,jdbcType=VARCHAR},
      tree_root_node_id = #{treeRootNodeId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>