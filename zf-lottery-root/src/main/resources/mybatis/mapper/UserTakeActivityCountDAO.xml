<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.zifanxiansheng.zf_lottery.infrastructure.dao.UserTakeActivityCountDAO">
    <resultMap id="BaseResultMap" type="top.zifanxiansheng.zf_lottery.infrastructure.po.UserTakeActivityCount">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="u_id" jdbcType="VARCHAR" property="uId"/>
        <result column="activity_id" jdbcType="BIGINT" property="activityId"/>
        <result column="total_count" jdbcType="INTEGER" property="totalCount"/>
        <result column="left_count" jdbcType="INTEGER" property="leftCount"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, u_id, activity_id, total_count, left_count, create_time, update_time
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user_take_activity_count
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from user_take_activity_count
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id"
            parameterType="top.zifanxiansheng.zf_lottery.infrastructure.po.UserTakeActivityCount"
            useGeneratedKeys="true">
        insert into user_take_activity_count (u_id, activity_id, total_count,
                                              left_count, create_time, update_time)
        values (#{uId,jdbcType=VARCHAR}, #{activityId,jdbcType=BIGINT}, #{totalCount,jdbcType=INTEGER},
                #{leftCount,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id"
            parameterType="top.zifanxiansheng.zf_lottery.infrastructure.po.UserTakeActivityCount"
            useGeneratedKeys="true">
        insert into user_take_activity_count
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="uId != null">
                u_id,
            </if>
            <if test="activityId != null">
                activity_id,
            </if>
            <if test="totalCount != null">
                total_count,
            </if>
            <if test="leftCount != null">
                left_count,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="uId != null">
                #{uId,jdbcType=VARCHAR},
            </if>
            <if test="activityId != null">
                #{activityId,jdbcType=BIGINT},
            </if>
            <if test="totalCount != null">
                #{totalCount,jdbcType=INTEGER},
            </if>
            <if test="leftCount != null">
                #{leftCount,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="selectByKeySelective"
            parameterType="top.zifanxiansheng.zf_lottery.infrastructure.po.UserTakeActivityCount">
        select
        <include refid="Base_Column_List"/>
        from user_take_activity_count
        <where>
            <set>
                <if test="uId != null">
                    u_id = #{uId,jdbcType=VARCHAR},
                </if>
                <if test="activityId != null">
                    activity_id = #{activityId,jdbcType=BIGINT},
                </if>
                <if test="totalCount != null">
                    total_count = #{totalCount,jdbcType=INTEGER},
                </if>
                <if test="leftCount != null">
                    left_count = #{leftCount,jdbcType=INTEGER},
                </if>
                <if test="createTime != null">
                    create_time = #{createTime,jdbcType=TIMESTAMP},
                </if>
                <if test="updateTime != null">
                    update_time = #{updateTime,jdbcType=TIMESTAMP},
                </if>
            </set>
        </where>
    </select>
    <update id="updateByPrimaryKeySelective"
            parameterType="top.zifanxiansheng.zf_lottery.infrastructure.po.UserTakeActivityCount">
        update user_take_activity_count
        <set>
            <if test="uId != null">
                u_id = #{uId,jdbcType=VARCHAR},
            </if>
            <if test="activityId != null">
                activity_id = #{activityId,jdbcType=BIGINT},
            </if>
            <if test="totalCount != null">
                total_count = #{totalCount,jdbcType=INTEGER},
            </if>
            <if test="leftCount != null">
                left_count = #{leftCount,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey"
            parameterType="top.zifanxiansheng.zf_lottery.infrastructure.po.UserTakeActivityCount">
        update user_take_activity_count
        set u_id        = #{uId,jdbcType=VARCHAR},
            activity_id = #{activityId,jdbcType=BIGINT},
            total_count = #{totalCount,jdbcType=INTEGER},
            left_count  = #{leftCount,jdbcType=INTEGER},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            update_time = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>